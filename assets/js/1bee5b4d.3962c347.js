"use strict";(self.webpackChunk_revideo_docs=self.webpackChunk_revideo_docs||[]).push([[7629],{2247:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>y});var r=n(4041);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),g=o,y=d["".concat(p,".").concat(g)]||d[g]||u[g]||a;return n?r.createElement(y,i(i({ref:t},c),{},{components:n})):r.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5195:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(9575),o=(n(4041),n(2247));const a={},i="From 0.3.x to 0.4.x",l={unversionedId:"upgrading/from_0.3.x_to_0.4",id:"upgrading/from_0.3.x_to_0.4",title:"From 0.3.x to 0.4.x",description:"The release of v0.4 comes with the following breaking changes:",source:"@site/docs/upgrading/from_0.3.x_to_0.4.md",sourceDirName:"upgrading",slug:"/upgrading/from_0.3.x_to_0.4",permalink:"/upgrading/from_0.3.x_to_0.4",draft:!1,editUrl:"https://github.com/havenhq/revideo/blob/main/packages/docs/docs/upgrading/from_0.3.x_to_0.4.md",tags:[],version:"current",lastUpdatedBy:"Justus Mattern",frontMatter:{},sidebar:"docs",previous:{title:"From 0.2.x to 0.3.x",permalink:"/upgrading/from_0.2.x_to_0.3"},next:{title:"API Reference",permalink:"/category/api-reference"}},p={},s=[{value:"renderVideo() accepts arguments as object and points to project file instead of vite config file",id:"rendervideo-accepts-arguments-as-object-and-points-to-project-file-instead-of-vite-config-file",level:3},{value:"npx revideo serve serves the player through <code>localhost:4000/player</code> instead of <code>localhost:4000/player/project.js</code>.",id:"npx-revideo-serve-serves-the-player-through-localhost4000player-instead-of-localhost4000playerprojectjs",level:3}],c={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.yg)(d,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"from-03x-to-04x"},"From 0.3.x to 0.4.x"),(0,o.yg)("p",null,"The release of v0.4 comes with the following breaking changes:"),(0,o.yg)("h3",{id:"rendervideo-accepts-arguments-as-object-and-points-to-project-file-instead-of-vite-config-file"},"renderVideo() accepts arguments as object and points to project file instead of vite config file"),(0,o.yg)("p",null,"To make it easier to work with ",(0,o.yg)("inlineCode",{parentName:"p"},"renderVideo()")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"renderPartialVideo()"),", the\nfunctions now accept arguments as attributes of a ",(0,o.yg)("inlineCode",{parentName:"p"},"RenderVideoProps")," /\n",(0,o.yg)("inlineCode",{parentName:"p"},"RenderPartialVideoProps")," object."),(0,o.yg)("p",null,"Furthermore, they don't point to a ",(0,o.yg)("inlineCode",{parentName:"p"},"vite.config.ts")," file anymore, but instead to\nyour video's project file, which is ",(0,o.yg)("inlineCode",{parentName:"p"},"./src/project.ts")," by default."),(0,o.yg)("p",null,"In Revideo 0.3.x, you might have called ",(0,o.yg)("inlineCode",{parentName:"p"},"renderVideo()")," like this:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx"},"const file = await renderVideo(\n  'vite.config.ts',\n  {fill: 'orange'},\n  {logProgress: true},\n);\n")),(0,o.yg)("p",null,"To update to 0.4.x, wrap your arguments in curly braces, add the name of the\nargument as a key and replace ",(0,o.yg)("inlineCode",{parentName:"p"},'"vite.config.ts"'),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx"},"const file = await renderVideo({\n  projectFile: './src/project.ts',\n  variables: {fill: 'orange'},\n  settings: {logProgress: true},\n});\n")),(0,o.yg)("p",null,"Note that the following changes were made to the input arguments:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"in the ",(0,o.yg)("inlineCode",{parentName:"li"},"settings"),' object, "',(0,o.yg)("inlineCode",{parentName:"li"},"name"),'", which refers to the name of the output\nfile, was renamed to ',(0,o.yg)("inlineCode",{parentName:"li"},"outFile"),". Also, you now have to append ",(0,o.yg)("inlineCode",{parentName:"li"},".mp4")," to\n",(0,o.yg)("inlineCode",{parentName:"li"},"outFile"),". In summary, if you previously had the argument ",(0,o.yg)("inlineCode",{parentName:"li"},'name: "myvideo"'),",\nyou should change it to ",(0,o.yg)("inlineCode",{parentName:"li"},'outFile: "myvideo.mp4"'),"."),(0,o.yg)("li",{parentName:"ul"},"the ",(0,o.yg)("inlineCode",{parentName:"li"},"progressCallback")," argument was moved inside of ",(0,o.yg)("inlineCode",{parentName:"li"},"settings"),".")),(0,o.yg)("p",null,"To check how you should structure your input arguments, you can take a look at\nthe ",(0,o.yg)("inlineCode",{parentName:"p"},"renderVideo()")," ",(0,o.yg)("a",{parentName:"p",href:"/api/renderer/renderVideo"},"docs"),"."),(0,o.yg)("h3",{id:"npx-revideo-serve-serves-the-player-through-localhost4000player-instead-of-localhost4000playerprojectjs"},"npx revideo serve serves the player through ",(0,o.yg)("inlineCode",{parentName:"h3"},"localhost:4000/player")," instead of ",(0,o.yg)("inlineCode",{parentName:"h3"},"localhost:4000/player/project.js"),"."),(0,o.yg)("p",null,"In 0.3.x, when running ",(0,o.yg)("inlineCode",{parentName:"p"},"npx revideo serve"),", you were previously able to obtain\nthe player from ",(0,o.yg)("inlineCode",{parentName:"p"},"localhost:4000/player/project.js")," in order to pass it to the\n",(0,o.yg)("inlineCode",{parentName:"p"},"<Player/>"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx"},'<Player src="http://localhost:4000/player/project.js" controls={true} />\n')),(0,o.yg)("p",null,"Now, in 0.4.x, you should just pass ",(0,o.yg)("inlineCode",{parentName:"p"},"localhost:4000/player")," instead:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx"},'<Player src="http://localhost:4000/player" controls={true} />\n')),(0,o.yg)("p",null,"This change was made as we now start serving both the ",(0,o.yg)("inlineCode",{parentName:"p"},"project.js")," file and the\nassets. If you have files in the ",(0,o.yg)("inlineCode",{parentName:"p"},"/public")," folder of your Revideo project, you\ncan now also use the assets from that project in another (NextJS) project that\nuses the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Player/>"),"."))}u.isMDXComponent=!0}}]);