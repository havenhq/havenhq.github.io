"use strict";(self.webpackChunk_revideo_docs=self.webpackChunk_revideo_docs||[]).push([[9938],{2247:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>h});var a=n(4041);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=c(n),g=r,h=d["".concat(l,".").concat(g)]||d[g]||m[g]||o;return n?a.createElement(h,i(i({ref:t},s),{},{components:n})):a.createElement(h,i({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=g;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[d]="string"==typeof e?e:r,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5251:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var a=n(9575),r=(n(4041),n(2247));const o={sidebar_position:5,slug:"/path"},i="Path",p={unversionedId:"components/path",id:"components/path",title:"Path",description:"_Note: These docs were adopted from the original",source:"@site/docs/components/path.mdx",sourceDirName:"components",slug:"/path",permalink:"/path",draft:!1,editUrl:"https://github.com/havenhq/revideo/blob/main/packages/docs/docs/components/path.mdx",tags:[],version:"current",lastUpdatedBy:"Justus Mattern",sidebarPosition:5,frontMatter:{sidebar_position:5,slug:"/path"},sidebar:"docs",previous:{title:"Spline",permalink:"/spline"},next:{title:"Custom Components",permalink:"/custom-components"}},l={},c=[{value:"Defining Path",id:"defining-path",level:2},{value:"Animating Path",id:"animating-path",level:2},{value:"Morphing Between Two Path",id:"morphing-between-two-path",level:3},{value:"Animating objects along a spline",id:"animating-objects-along-a-spline",level:3}],s={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.yg)(d,(0,a.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"path"},"Path"),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Note: These docs were adopted from the original\n",(0,r.yg)("a",{parentName:"em",href:"https://motioncanvas.io/docs/"},"Motion Canvas")," docs")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"editor",editor:!0},"import {makeScene2D, Path} from '@revideo/2d';\nimport {createRef} from '@revideo/core';\n\nexport default makeScene2D(function* (view) {\n  const path = createRef<Path>();\n\n  view.add(\n    <Path\n      ref={path}\n      lineWidth={4}\n      stroke={'#e13238'}\n      data=\"M 151.34904,307.20455 L 264.34904,307.20455 C 264.34904,291.14096 263.2021,287.95455 236.59904,287.95455 C 240.84904,275.20455 258.12424,244.35808 267.72404,244.35808 C 276.21707,244.35808 286.34904,244.82592 286.34904,264.20455 C 286.34904,286.20455 323.37171,321.67547 332.34904,307.20455 C 345.72769,285.63897 309.34904,292.21514 309.34904,240.20455 C 309.34904,169.05135 350.87417,179.18071 350.87417,139.20455 C 350.87417,119.20455 345.34904,116.50374 345.34904,102.20455 C 345.34904,83.30695 361.99717,84.403577 358.75805,68.734879 C 356.52061,57.911656 354.76962,49.23199 353.46516,36.143889 C 352.53959,26.857305 352.24452,16.959398 342.59855,17.357382 C 331.26505,17.824992 326.96549,37.77419 309.34904,39.204549 C 291.76851,40.631991 276.77834,24.238028 269.97404,26.579549 C 263.22709,28.901334 265.34904,47.204549 269.34904,60.204549 C 275.63588,80.636771 289.34904,107.20455 264.34904,111.20455 C 239.34904,115.20455 196.34904,119.20455 165.34904,160.20455 C 134.34904,201.20455 135.49342,249.3212 123.34904,264.20455 C 82.590696,314.15529 40.823919,293.64625 40.823919,335.20455 C 40.823919,353.81019 72.349045,367.20455 77.349045,361.20455 C 82.349045,355.20455 34.863764,337.32587 87.995492,316.20455 C 133.38711,298.16014 137.43914,294.47663 151.34904,307.20455 z\"\n      position={[-100, -100]}\n      scale={0.5}\n      start={0}\n      end={0}\n    ></Path>,\n  );\n\n  yield* path().end(1, 1);\n  yield* path().fill('#e13238', 1);\n});\n")),(0,r.yg)("p",null,"This component allows us to draw and animate SVG path."),(0,r.yg)("h2",{id:"defining-path"},"Defining Path"),(0,r.yg)("p",null,"You can define path to display by setting ",(0,r.yg)("inlineCode",{parentName:"p"},"data")," property of Path component."),(0,r.yg)("h2",{id:"animating-path"},"Animating Path"),(0,r.yg)("h3",{id:"morphing-between-two-path"},"Morphing Between Two Path"),(0,r.yg)("p",null,"To morph between two path you can tween ",(0,r.yg)("inlineCode",{parentName:"p"},"data")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"editor",editor:!0},"import {makeScene2D, Path} from '@revideo/2d';\nimport {createRef} from '@revideo/core';\n\nexport default makeScene2D(function* (view) {\n  const path = createRef<Path>();\n\n  view.add(\n    <Path\n      ref={path}\n      lineWidth={4}\n      stroke={'#e13238'}\n      data=\"M301.113,12.011L576.715,584.766L25.508,584.766L301.113,12.011z\"\n      position={[-100, -100]}\n      scale={0.25}\n    ></Path>,\n  );\n\n  yield* path().data(\n    'M25.508,12.011 L576.715,12.011 L576.715,584.766 L25.508,584.766 L25.508,12.011 z',\n    1,\n  );\n});\n")),(0,r.yg)("h3",{id:"animating-objects-along-a-spline"},"Animating objects along a spline"),(0,r.yg)("p",null,"Like Spline and Bezier, you can also make other components follow this component\npath. You can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"getPointAtPercentage")," to get point along this path."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"editor",editor:!0},"import {makeScene2D, Path, Rect} from '@revideo/2d';\nimport {createRef, createSignal} from '@revideo/core';\n\nexport default makeScene2D(function* (view) {\n  const path = createRef<Path>();\n  const progress = createSignal(0);\n\n  view.add(\n    <>\n      <Path\n        ref={path}\n        lineWidth={6}\n        stroke={'lightgray'}\n        data={\n          'M -180 -21 C -180 -54.1371 -153.1371 -81 -120 -81 C -86.8629 -81 -60 -54.1371 -60 -21 C -60 12.1371 -33.1371 33 0 33 C 33.1371 33 48 3 48 -21 C 48 -45 30 -69 0 -69 C -30 -69 -48 -45 -48 -21 C -48 3 -33.1371 33 0 33 C 39 34.5 60 12 60 -21 C 60 -54.1371 86.8629 -81 120 -81 C 153.1371 -81 180 -54.1371 180 -21 C 180 12.1371 153.1371 39 120 39 L -120 39 C -153.1371 39 -180 12.1371 -180 -21 Z'\n        }\n      />\n      <Rect\n        size={26}\n        fill={'lightseagreen'}\n        position={() => path().getPointAtPercentage(progress()).position}\n        rotation={() => path().getPointAtPercentage(progress()).tangent.degrees}\n      />,\n    </>,\n  );\n\n  yield* progress(1, 2).to(0, 2);\n});\n")))}m.isMDXComponent=!0}}]);