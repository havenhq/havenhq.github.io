"use strict";(self.webpackChunk_revideo_docs=self.webpackChunk_revideo_docs||[]).push([[2969],{2247:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>m});var i=t(4041);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=p(t),d=r,m=g["".concat(s,".").concat(d)]||g[d]||c[d]||o;return t?i.createElement(m,a(a({ref:n},u),{},{components:t})):i.createElement(m,a({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[g]="string"==typeof e?e:r,a[1]=l;for(var p=2;p<o;p++)a[p]=t[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4863:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var i=t(9575),r=(t(4041),t(2247));const o={slug:"/plugins/node",description:"Extend Vite and the Node.js server.",sidebar_position:3},a="Node.js",l={unversionedId:"advanced/plugins/node",id:"advanced/plugins/node",title:"Node.js",description:"Extend Vite and the Node.js server.",source:"@site/docs/advanced/plugins/node.mdx",sourceDirName:"advanced/plugins",slug:"/plugins/node",permalink:"/plugins/node",draft:!1,editUrl:"https://github.com/havenhq/revideo/blob/main/packages/docs/docs/advanced/plugins/node.mdx",tags:[],version:"current",lastUpdatedBy:"Justus Mattern",sidebarPosition:3,frontMatter:{slug:"/plugins/node",description:"Extend Vite and the Node.js server.",sidebar_position:3},sidebar:"docs",previous:{title:"Editor",permalink:"/plugins/editor"},next:{title:"Migration",permalink:"/category/migration"}},s={},p=[{value:"Passing options to Runtime",id:"passing-options-to-runtime",level:3}],u={toc:p},g="wrapper";function c(e){let{components:n,...t}=e;return(0,r.yg)(g,(0,i.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"nodejs"},"Node.js"),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Note: These docs were adopted from the original\n",(0,r.yg)("a",{parentName:"em",href:"https://motioncanvas.io/docs/"},"Motion Canvas")," docs")),(0,r.yg)("div",{className:"row margin-bottom--md"},(0,r.yg)("div",{className:"col col--6"},(0,r.yg)("p",null,"Motion Canvas builds on top of the Vite plugin system. To create a plugin that\nruns on Node.js, you just create a ",(0,r.yg)("a",{parentName:"p",href:"https://vitejs.dev/guide/api-plugin.html#authoring-a-plugin"},"Vite plugin")," and import it in\nyour ",(0,r.yg)("inlineCode",{parentName:"p"},"vite.config.ts")," file. On top of that, ",(0,r.yg)("inlineCode",{parentName:"p"},"@revideo/vite-plugin")," provides a\nsymbol that lets you define revideo-specific options."),(0,r.yg)("p",null,"Let's start by creating a file for our plugin. This time we'll put it in the\nroot directory of our project because Vite plugins are not part of the runtime\nsource code."),(0,r.yg)("p",null,"We use the Vite ",(0,r.yg)("a",{parentName:"p",href:"https://vitejs.dev/guide/api-plugin.html#configureserver"},(0,r.yg)("inlineCode",{parentName:"a"},"configureServer"))," hook to add a custom\nendpoint. Meanwhile, the ",(0,r.yg)("inlineCode",{parentName:"p"},"entryPoint")," option lets us specify the path to our\nruntime plugin:")),(0,r.yg)("div",{className:"col col--6"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff",metastring:'title="Project structure"',title:'"Project','structure"':!0},"  project/\n  \u251c\u2500\u2500 src/\n  \u2502   \u251c\u2500\u2500 scenes/\n  \u2502   \u2502   \u2514\u2500\u2500 example.tsx\n  \u2502   \u251c\u2500\u2500 plugin.ts\n  \u2502   \u2514\u2500\u2500 project.ts\n  \u251c\u2500\u2500 package.json\n  \u251c\u2500\u2500 tsconfig.json\n// highlight-next-line\n+ \u251c\u2500\u2500 myVitePlugin.ts\n  \u2514\u2500\u2500 vite.config.ts\n")))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts",metastring:'title="myVitePlugin.ts"',title:'"myVitePlugin.ts"'},"import {Plugin, PLUGIN_OPTIONS} from '@revideo/vite-plugin';\n\nexport default function myVitePlugin(): Plugin {\n  return {\n    name: 'vite-plugin-revideo-example',\n\n    // extend the dev server using Vite plugin hooks:\n    configureServer(server) {\n      server.middlewares.use('/my-plugin', (req, res) => {\n        res.end('Hello from my plugin!');\n      });\n    },\n\n    // extend Motion Canvas:\n    [PLUGIN_OPTIONS]: {\n      entryPoint: './plugin.ts',\n    },\n  };\n}\n")),(0,r.yg)("p",null,"Here's how we would import such plugin in our ",(0,r.yg)("inlineCode",{parentName:"p"},"vite.config.ts")," file:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts",metastring:'title="vite.config.ts"',title:'"vite.config.ts"'},"import {defineConfig} from 'vite';\nimport motionCanvas from '@revideo/vite-plugin';\n// highlight-next-line\nimport myVitePlugin from './myVitePlugin';\n\nexport default defineConfig({\n  plugins: [\n    motionCanvas(),\n    // highlight-next-line\n    myVitePlugin(),\n  ],\n});\n")),(0,r.yg)("p",null,"Also, since we defined the entry point in the Node.js plugin, we no longer need\nto import the runtime plugin in our project file:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff",metastring:'title="src/project.ts"',title:'"src/project.ts"'},"  import {makeProject} from '@revideo/core';\n- import myPlugin from './plugin';\n  import example from './scenes/example?scene';\n\n  export default makeProject({\n    scenes: [example],\n-   plugins: [myPlugin()],\n  });\n")),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"Notice that we defined the entry point as ",(0,r.yg)("inlineCode",{parentName:"p"},"'./plugin.ts'"),". Because it's a\nrelative path, it will be resolved relative to the project file. Once you turn\nyour plugin into a separate package, you can use a package name instead.")),(0,r.yg)("p",null,"You can verify that the plugin is working by running the project and visiting\n",(0,r.yg)("a",{parentName:"p",href:"http://localhost:9000/my-plugin"},"http://localhost:9000/my-plugin"),"."),(0,r.yg)("h3",{id:"passing-options-to-runtime"},"Passing options to Runtime"),(0,r.yg)("p",null,"A Node.js plugin has the ability to pass options to the runtime plugin. We can\ndo that using the ",(0,r.yg)("inlineCode",{parentName:"p"},"runtimeConfig")," property:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts",metastring:'title="myVitePlugin.ts"',title:'"myVitePlugin.ts"'},"import {Plugin, PLUGIN_OPTIONS} from '@revideo/vite-plugin';\n\nexport default function myVitePlugin(): Plugin {\n  return {\n    name: 'vite-plugin-revideo-example',\n    // ...\n    [PLUGIN_OPTIONS]: {\n      entryPoint: './plugin.ts',\n      // highlight-start\n      runtimeConfig: () => ({\n        foo: 'bar',\n      }),\n      // highlight-end\n    },\n  };\n}\n")),(0,r.yg)("p",null,"We can then update the runtime plugin to receive these options:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/plugin.ts"',title:'"src/plugin.ts"'},"import {makePlugin} from '@revideo/core';\n\n// highlight-start\ninterface MyPluginOptions {\n  foo: string;\n}\n// highlight-end\n\nexport default makePlugin((options?: MyPluginOptions) => {\n  // highlight-next-line\n  console.log(options?.foo); // 'bar'\n\n  return {\n    name: 'revideo-plugin-example',\n    player(player) {\n      player.onRecalculated.subscribe(() => {\n        player.requestReset();\n        player.togglePlayback(true);\n      });\n    },\n  };\n});\n")))}c.isMDXComponent=!0}}]);