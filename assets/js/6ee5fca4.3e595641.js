"use strict";(self.webpackChunk_revideo_docs=self.webpackChunk_revideo_docs||[]).push([[7712],{2247:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>d});var i=n(4041);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),l=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},g=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,g=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,d=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?i.createElement(d,a(a({ref:t},g),{},{components:n})):i.createElement(d,a({ref:t},g))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:r,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4723:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=n(9575),r=(n(4041),n(2247));const o={sidebar_position:5,slug:"/changing-object-size-over-time-with-signals"},a="Changing Object Sizes with Signals",c={unversionedId:"code-snippets/changing-object-size-over-time-with-signals",id:"code-snippets/changing-object-size-over-time-with-signals",title:"Changing Object Sizes with Signals",description:"You can use signals to change values in your animation over time. Below you can",source:"@site/docs/code-snippets/changing-object-size-over-time-with-signals.mdx",sourceDirName:"code-snippets",slug:"/changing-object-size-over-time-with-signals",permalink:"/changing-object-size-over-time-with-signals",draft:!1,editUrl:"https://github.com/havenhq/revideo/blob/main/packages/docs/docs/code-snippets/changing-object-size-over-time-with-signals.mdx",tags:[],version:"current",lastUpdatedBy:"Justus Mattern",sidebarPosition:5,frontMatter:{sidebar_position:5,slug:"/changing-object-size-over-time-with-signals"},sidebar:"docs",previous:{title:"Streaming Text",permalink:"/streaming-text"},next:{title:"Moving and Manipulating Objects",permalink:"/moving-manipulating-objects"}},s={},l=[],g={toc:l},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,i.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"changing-object-sizes-with-signals"},"Changing Object Sizes with Signals"),(0,r.yg)("p",null,"You can use signals to change values in your animation over time. Below you can\nfind a example that uses signals to change the size of a circle over time."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"editor",editor:!0},"import {Circle, Txt, makeScene2D} from '@revideo/2d';\nimport {createSignal} from '@revideo/core';\n\nexport default makeScene2D(function* (view) {\n  const circleSize = createSignal(50); // initial size of 50\n\n  yield view.add(\n    <>\n      <Circle fill={'green'} size={circleSize} />\n      <Txt fontSize={40} x={-300}>\n        {() => `size: ${circleSize().toFixed(1)}`}\n      </Txt>\n    </>,\n  );\n\n  yield* circleSize(200, 2); // change size to 200 over two seconds\n});\n")))}u.isMDXComponent=!0}}]);