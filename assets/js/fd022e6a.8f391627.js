"use strict";(self.webpackChunk_revideo_docs=self.webpackChunk_revideo_docs||[]).push([[8251],{5906:(e,n,t)=>{t.d(n,{A:()=>g});var a=t(9531),o=t(53),i=t(4041),r=t(9631),l=t(9575);function s(e){let{width:n=24,height:t=24,...a}=e;return i.createElement("svg",(0,l.A)({viewBox:"0 0 24 24",width:n,height:t,"aria-hidden":!0},a),i.createElement("path",{d:"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z",fill:"currentColor"}))}const d={container:"container_lQCo",small:"small_As57",banner:"banner_A4QS",player:"player_tELG",link:"link_BTzN",icon:"icon_wSGd"};function p(e){let{name:n}=e;const t=`https://github.com/revideo/revideo/blob/main/packages/examples/src/scenes/${n}.tsx`;return i.createElement(r.A,{to:t,className:(0,o.A)("padding--sm",d.link)},i.createElement("span",null,"View source code"),i.createElement(s,{className:d.icon}))}function g(e){let{name:n,banner:t,small:a,link:r}=e;return i.createElement("div",{className:(0,o.A)(d.container,t&&d.banner,a&&d.small)},i.createElement("revideo-player",{class:d.player,src:`/examples/${n}.js`,auto:t}),i.createElement(p,{name:r||n}))}a.A.canUseDOM&&t.e(3980).then(t.bind(t,3980))},3506:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=t(9575),o=(t(4041),t(2247));t(5906),t(154);const i={sidebar_position:1,slug:"/installation-and-setup"},r="Quickstart",l={unversionedId:"guide/installation-and-setup",id:"guide/installation-and-setup",title:"Quickstart",description:"Let's install revideo with a sample project. To use revideo, make sure that you",source:"@site/docs/guide/installation-and-setup.mdx",sourceDirName:"guide",slug:"/installation-and-setup",permalink:"/installation-and-setup",draft:!1,editUrl:"https://github.com/havenhq/revideo/blob/main/packages/docs/docs/guide/installation-and-setup.mdx",tags:[],version:"current",lastUpdatedBy:"Justus Mattern",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/installation-and-setup"},sidebar:"docs",previous:{title:"Usage Guide",permalink:"/category/usage-guide"},next:{title:"Project Structure",permalink:"/project-structure"}},s={},d=[{value:"Creating a new project",id:"creating-a-new-project",level:3},{value:"Rendering the Video",id:"rendering-the-video",level:2},{value:"Rendering from the browser",id:"rendering-from-the-browser",level:3},{value:"Understanding the Video Code",id:"understanding-the-video-code",level:2},{value:"Defining a generator function",id:"defining-a-generator-function",level:3},{value:"Adding Video and Audio elements",id:"adding-video-and-audio-elements",level:3},{value:"Play media for one second",id:"play-media-for-one-second",level:3},{value:"Animating the revideo logo",id:"animating-the-revideo-logo",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2}],p={toc:d},g="wrapper";function c(e){let{components:n,...t}=e;return(0,o.yg)(g,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"quickstart"},"Quickstart"),(0,o.yg)("p",null,"Let's install revideo with a sample project. To use revideo, make sure that you\nhave ",(0,o.yg)("a",{parentName:"p",href:"https://nodejs.org/"},"Node.js")," version 16 or greater."),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"If you're on Linux, also make sure that you have nscd installed:\n",(0,o.yg)("inlineCode",{parentName:"p"},"sudo apt-get install nscd"),". You need this package for\n",(0,o.yg)("a",{parentName:"p",href:"/common-issues/ffmpeg"},"ffmpeg"),".")),(0,o.yg)("h3",{id:"creating-a-new-project"},"Creating a new project"),(0,o.yg)("p",null,"Run the following command to create a new revideo project (If this fails, check\nout the ",(0,o.yg)("a",{parentName:"p",href:"#troubleshooting"},"troubleshooting")," section):"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"npm init @revideo@latest\n")),(0,o.yg)("p",null,"Now, select the ",(0,o.yg)("strong",{parentName:"p"},"default project"),", navigate to its folder and install all\ndependencies:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"cd <project-path>\nnpm install\n")),(0,o.yg)("p",null,"To preview your video in the editor, run:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"}," npm start\n")),(0,o.yg)("p",null,"The editor can now be accessed by visiting\n",(0,o.yg)("a",{parentName:"p",href:"http://localhost:9000/"},"http://localhost:9000/"),". Here you should see the video\nshown below."),(0,o.yg)("video",{width:"708",height:"400",controls:!0},(0,o.yg)("source",{src:"https://revideo-example-assets.s3.amazonaws.com/revideo-example.mp4",type:"video/mp4"}),"Your browser does not support the video tag."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx"},"import {Audio, Img, Video, makeScene2D} from '@revideo/2d';\nimport {all, chain, createRef, waitFor} from '@revideo/core';\n\nexport default makeScene2D(function* (view) {\n  const logoRef = createRef<Img>();\n\n  yield view.add(\n    <>\n      <Video\n        src={'https://revideo-example-assets.s3.amazonaws.com/stars.mp4'}\n        play={true}\n        size={['100%', '100%']}\n      />\n      <Audio\n        src={'https://revideo-example-assets.s3.amazonaws.com/chill-beat.mp3'}\n        play={true}\n        time={17.0}\n      />\n    </>,\n  );\n\n  yield* waitFor(1);\n\n  view.add(\n    <Img\n      width={'1%'}\n      ref={logoRef}\n      src={\n        'https://revideo-example-assets.s3.amazonaws.com/revideo-logo-white.png'\n      }\n    />,\n  );\n\n  yield* chain(\n    all(logoRef().scale(40, 2), logoRef().rotation(360, 2)),\n    logoRef().scale(60, 1),\n  );\n});\n")),(0,o.yg)("h2",{id:"rendering-the-video"},"Rendering the Video"),(0,o.yg)("p",null,"You can render your video by running:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"npm run render\n")),(0,o.yg)("p",null,"This will call the ",(0,o.yg)("inlineCode",{parentName:"p"},"./src/render.ts")," script in your code:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"import {renderVideo} from '@revideo/renderer';\n\nasync function render() {\n  console.log('Rendering video...');\n\n  // This is the main function that renders the video\n  const file = await renderVideo({\n    projectFile: './src/project.ts',\n    settings: {logProgress: true},\n  });\n\n  console.log(`Rendered video to ${file}`);\n}\n\nrender();\n")),(0,o.yg)("p",null,"For more information, check out the ",(0,o.yg)("a",{parentName:"p",href:"/api/renderer/renderVideo"},"renderVideo()"),"\nAPI reference."),(0,o.yg)("p",null,"Alternatively, you can also render your video using the button in the editor\nthat starts when you run ",(0,o.yg)("inlineCode",{parentName:"p"},"npm run start"),"."),(0,o.yg)("h3",{id:"rendering-from-the-browser"},"Rendering from the browser"),(0,o.yg)("p",null,'To render videos from the editor, simply click the "Render" Button:'),(0,o.yg)("p",null,(0,o.yg)("img",{parentName:"p",src:"https://revideo-example-assets.s3.amazonaws.com/render-button.png",alt:"Render Button"})),(0,o.yg)("h2",{id:"understanding-the-video-code"},"Understanding the Video Code"),(0,o.yg)("p",null,"For now, we can ignore all files in our revideo project except for\n",(0,o.yg)("inlineCode",{parentName:"p"},"src/scenes/example.tsx"),", as this is where the visuals and audio of our video\nare defined. Let's walk through all the parts of the code that might confuse\nyou, and provide explanations and references."),(0,o.yg)("h3",{id:"defining-a-generator-function"},"Defining a generator function"),(0,o.yg)("p",null,"Our animation is defined within a generator function that is passed to\n",(0,o.yg)("inlineCode",{parentName:"p"},"makeScene2D")," - this function describes the sequence of events happening in our\nvideo:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx"},"import {Audio, Img, Video, makeScene2D} from '@revideo/2d';\nimport {all, chain, createRef, waitFor} from '@revideo/core';\n\nexport default makeScene2D(function* (view) {\n// your animation flow here\n}\n")),(0,o.yg)("p",null,"Generator functions can return multiple values - when they are called, they will\nexecute until they first encounter a ",(0,o.yg)("inlineCode",{parentName:"p"},"yield")," statement, and return the yielded\nvalue. Revideo renders animations by continually calling the generator function,\nwhich will yield frames that we can export. It is not neccessary to understand\nhow this works exactly, but if you are interested, you can read about the\nanimation flow in revideo ",(0,o.yg)("a",{parentName:"p",href:"/flow"},"here"),"."),(0,o.yg)("h3",{id:"adding-video-and-audio-elements"},"Adding Video and Audio elements"),(0,o.yg)("p",null,"At the start of our generator function, we add ",(0,o.yg)("a",{parentName:"p",href:"/api/2d/components/Video"},"Video"),"\nand ",(0,o.yg)("a",{parentName:"p",href:"/api/2d/components/Audio"},"Audio")," tags to our ",(0,o.yg)("inlineCode",{parentName:"p"},"view"),", which will display\nthem on the canvas. Other components you could add include\n",(0,o.yg)("a",{parentName:"p",href:"/api/2d/components/Txt"},"Txt")," or ",(0,o.yg)("a",{parentName:"p",href:"/api/2d/components/Img"},"Img")," tags, or basic\nshapes like ",(0,o.yg)("a",{parentName:"p",href:"api/2d/components/Rect"},"Rect")," or\n",(0,o.yg)("a",{parentName:"p",href:"api/2d/components/Circle"},"Circle"),". You can find the API for all components\n",(0,o.yg)("a",{parentName:"p",href:"api/2d/components"},"here"),"."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx"},"yield view.add(\n  <>\n    <Video\n      src={'https://revideo-example-assets.s3.amazonaws.com/stars.mp4'}\n      play={true}\n      size={['100%', '100%']}\n    />\n    <Audio\n      src={'https://revideo-example-assets.s3.amazonaws.com/chill-beat.mp3'}\n      play={true}\n      time={17.0}\n    />\n  </>,\n);\n")),(0,o.yg)("p",null,"A few points about input arguments:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"In both cases, ",(0,o.yg)("inlineCode",{parentName:"li"},"src")," refers to the file, which points to a remote url on the\nbucket. Alternatively, you can use local files by passing their path."),(0,o.yg)("li",{parentName:"ul"},"Passing ",(0,o.yg)("inlineCode",{parentName:"li"},'size={["100%", "100%"]}')," makes the video stretch to the full width\nand height of its canvas."),(0,o.yg)("li",{parentName:"ul"},"Adding ",(0,o.yg)("inlineCode",{parentName:"li"},"play={true}")," makes both media elements play immediately, instead of\nbeing in a paused state.")),(0,o.yg)("h3",{id:"play-media-for-one-second"},"Play media for one second"),(0,o.yg)("p",null,"After adding our background video and audio, we execute"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx"},"yield * waitFor(1);\n")),(0,o.yg)("p",null,"The function ",(0,o.yg)("a",{parentName:"p",href:"/api/core/flow/#waitFor"},"waitFor")," does - as the name suggests -\nnothing. It is particularly useful when waiting for media (like videos and\naudio) to play or when we want to have a still-standing image."),(0,o.yg)("h3",{id:"animating-the-revideo-logo"},"Animating the revideo logo"),(0,o.yg)("p",null,"Lastly, we let the revideo logo spin into our video:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx"},"view.add(\n  <Img\n    width={'1%'}\n    ref={logoRef}\n    src={\n      'https://revideo-example-assets.s3.amazonaws.com/revideo-logo-white.png'\n    }\n  />,\n);\n\nyield *\n  chain(\n    all(logoRef().scale(40, 2), logoRef().rotation(360, 2)),\n    logoRef().scale(60, 1),\n  );\n")),(0,o.yg)("p",null,"A few things happen here: First, we add the revideo logo as an\n",(0,o.yg)("a",{parentName:"p",href:"/api/2d/components/Img"},"Img")," to our canvas. We set its initial width to only 1%\nof the screen, as we want it to grow as the video plays. We also pass a\n",(0,o.yg)("a",{parentName:"p",href:"/references"},"reference")," through ",(0,o.yg)("inlineCode",{parentName:"p"},"ref={logoRef}"),", which we had initialized\nbefore. Like ",(0,o.yg)("a",{parentName:"p",href:"https://react.dev/learn/referencing-values-with-refs"},"React refs"),",\nreferences allow us to access and modify the behavior of elements after they've\nbeen initialized."),(0,o.yg)("p",null,"In our code, we use a reference to the revideo logo to later animate it.\nParticularly, we run the following commands:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"scale(x, s)"),": scales the size of the logo to ",(0,o.yg)("inlineCode",{parentName:"li"},"x")," times its original size,\nwithin ",(0,o.yg)("inlineCode",{parentName:"li"},"n")," seconds."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"rotation(d, s)"),": rotates the image by ",(0,o.yg)("inlineCode",{parentName:"li"},"d")," degrees within ",(0,o.yg)("inlineCode",{parentName:"li"},"s")," seconds")),(0,o.yg)("p",null,"The flow of these animations is determined by the keywords ",(0,o.yg)("a",{parentName:"p",href:"/flow/#chain"},"chain"),"\nand ",(0,o.yg)("a",{parentName:"p",href:"/flow/#all"},"all"),". The former instructs revideo to play its input animations\nafter one another, while the latter instructs revideo to play them\nsimultaneously. As a result, we first see the revideo logo rotating around 360\ndegrees while growing to 40x its original size. After this is done, the logo\nstill grows to 60x its original size. You can learn more about the animation\nflow in revideo ",(0,o.yg)("a",{parentName:"p",href:"/flow"},"here"),"."),(0,o.yg)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,o.yg)("details",null,(0,o.yg)("summary",null,(0,o.yg)("code",null,"npm init @revideo@latest")," fails to execute."),(0,o.yg)("p",null,"There was ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/npm/cli/issues/5175"},"a bug in npm")," causing the\nabove command to fail. It got fixed in version ",(0,o.yg)("inlineCode",{parentName:"p"},"8.15.1"),". You can follow\n",(0,o.yg)("a",{parentName:"p",href:"https://docs.npmjs.com/try-the-latest-stable-version-of-npm"},"this guide")," to\nupdate your npm. Alternatively, you can use the following command instead:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"npm exec @revideo/create@latest\n"))),(0,o.yg)("details",null,(0,o.yg)("summary",null,(0,o.yg)("code",null,"npm install")," fails with ",(0,o.yg)("code",null,"code ENOENT")),(0,o.yg)("p",null,"If ",(0,o.yg)("inlineCode",{parentName:"p"},"npm install")," fails with the following error:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"npm ERR! code ENOENT\nnpm ERR! syscall open\nnpm ERR! path [path]\\package.json\nnpm ERR! errno -4058\nnpm ERR! enoent ENOENT: no such file or directory, open '[path]\\package.json'\nnpm ERR! enoent This is related to npm not being able to find a file.\nnpm ERR! enoent\n")),(0,o.yg)("p",null,"Make sure that you're executing the command in the correct directory. When you\nfinish bootstrapping the project with ",(0,o.yg)("inlineCode",{parentName:"p"},"npm init"),", it will display three\ncommands:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"cd [path]\nnpm install\nnpm start\n")),(0,o.yg)("p",null,"Did you run the ",(0,o.yg)("inlineCode",{parentName:"p"},"cd")," command to switch to the directory containing your project?")),(0,o.yg)("details",null,(0,o.yg)("summary",null,"I moved the camera too far away and can't find the preview (The preview is is black)"),(0,o.yg)("p",null,"You can press ",(0,o.yg)("inlineCode",{parentName:"p"},"0")," to refocus the camera on the preview.")),(0,o.yg)("details",null,(0,o.yg)("summary",null,"The animation ends abruptly or does not start at the beginning."),(0,o.yg)("p",null,"Make sure the playback range selector in the timeline starts and ends where you\nexpect it to, e.g., at the beginning and end of your animation. The range\nselector is a gray bar in the time axis of your timeline. When you move your\nmouse over it, six dots will appear allowing you to manipulate it.")),(0,o.yg)("details",null,(0,o.yg)("summary",null,"File watching does not work on Windows Subsystem for Linux (WSL) 2"),(0,o.yg)("p",null,"When running Vite on WSL2, file system watching does not work if a file is\nedited by Windows applications."),(0,o.yg)("p",null,"To fix this, move the project folder into the WSL2 file system and use WSL2\napplications to edit files. Accessing the Windows file system from WSL2 is slow,\nso this will improve performance."),(0,o.yg)("p",null,"For more information view the\n",(0,o.yg)("a",{parentName:"p",href:"https://vitejs.dev/config/server-options.html#server-watch"},(0,o.yg)("strong",{parentName:"a"},"Vite Docs")),".")))}c.isMDXComponent=!0}}]);