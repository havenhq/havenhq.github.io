"use strict";(self.webpackChunk_revideo_docs=self.webpackChunk_revideo_docs||[]).push([[294],{2247:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>f});var r=n(4041);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=i,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9429:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(9575),i=(n(4041),n(2247));const o={sidebar_position:6,slug:"/moving-manipulating-objects"},a="Moving and Manipulating Objects",c={unversionedId:"code-snippets/moving-objects",id:"code-snippets/moving-objects",title:"Moving and Manipulating Objects",description:"You can easily move objects and manipulate them using a variety of functions.",source:"@site/docs/code-snippets/moving-objects.mdx",sourceDirName:"code-snippets",slug:"/moving-manipulating-objects",permalink:"/moving-manipulating-objects",draft:!1,editUrl:"https://github.com/havenhq/revideo/blob/main/packages/docs/docs/code-snippets/moving-objects.mdx",tags:[],version:"current",lastUpdatedBy:"Justus Mattern",sidebarPosition:6,frontMatter:{sidebar_position:6,slug:"/moving-manipulating-objects"},sidebar:"docs",previous:{title:"Changing Object Sizes with Signals",permalink:"/changing-object-size-over-time-with-signals"},next:{title:"Transparent Video",permalink:"/transparent-video"}},s={},l=[],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.yg)(u,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"moving-and-manipulating-objects"},"Moving and Manipulating Objects"),(0,i.yg)("p",null,"You can easily move objects and manipulate them using a variety of functions.\nHere, we move a square along with some text around the screen, make it larger,\nand finally turn it into a circle:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"editor",editor:!0},"import {Rect, Txt, makeScene2D} from '@revideo/2d';\nimport {all, waitFor, createRef, easeInBounce, easeInExpo} from '@revideo/core';\n\nexport default makeScene2D(function* (view) {\n  const rectRef = createRef<Rect>();\n\n  yield view.add(\n    <Rect fill={'blue'} size={[100, 100]} ref={rectRef}>\n      <Txt fontSize={30} fontFamily={'Sans-Serif'} fill={'white'}>\n        Hi!\n      </Txt>\n    </Rect>,\n  );\n\n  yield* waitFor(0.5); // do nothing for 0.5s\n  yield* all(rectRef().position.x(200, 1), rectRef().position.y(50, 1)); // move the rectangle to [200, 50] in 1s\n  yield* all(rectRef().position.x(0, 2), rectRef().position.y(0, 2)); // move the rectangle to [0,0] (center) in 2s\n\n  yield* rectRef().scale(2, 1); // scale the rectangle by 2 in 1s\n  yield* rectRef().radius(100, 1); // increase the radius to 100 in 1s\n  yield* waitFor(1); // do nothing for 1s\n});\n")))}d.isMDXComponent=!0}}]);