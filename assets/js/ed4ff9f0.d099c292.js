"use strict";(self.webpackChunk_revideo_docs=self.webpackChunk_revideo_docs||[]).push([[8779],{2247:(e,n,o)=>{o.d(n,{xA:()=>p,yg:()=>m});var t=o(4041);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function a(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function i(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?a(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function g(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=t.createContext({}),l=function(e){var n=t.useContext(s),o=n;return e&&(o="function"==typeof e?e(n):i(i({},n),e)),o},p=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=g(e,["components","mdxType","originalType","parentName"]),c=l(o),u=r,m=c["".concat(s,".").concat(u)]||c[u]||d[u]||a;return o?t.createElement(m,i(i({ref:n},p),{},{components:o})):t.createElement(m,i({ref:n},p))}));function m(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=u;var g={};for(var s in n)hasOwnProperty.call(n,s)&&(g[s]=n[s]);g.originalType=e,g[c]="string"==typeof e?e:r,i[1]=g;for(var l=2;l<a;l++)i[l]=o[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,o)}u.displayName="MDXCreateElement"},7748:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>g,toc:()=>l});var t=o(9575),r=(o(4041),o(2247));const a={sidebar_position:12,slug:"/logging"},i="Logging",g={unversionedId:"motion-canvas/logging",id:"motion-canvas/logging",title:"Logging",description:"_Note: These docs were adopted from the original",source:"@site/docs/motion-canvas/logging.mdx",sourceDirName:"motion-canvas",slug:"/logging",permalink:"/logging",draft:!1,editUrl:"https://github.com/havenhq/revideo/blob/main/packages/docs/docs/motion-canvas/logging.mdx",tags:[],version:"current",lastUpdatedBy:"Justus Mattern",sidebarPosition:12,frontMatter:{sidebar_position:12,slug:"/logging"},sidebar:"docs",previous:{title:"Transitions",permalink:"/transitions"},next:{title:"Configuration",permalink:"/configuration"}},s={},l=[{value:"Basic",id:"basic",level:2},{value:"Payloads",id:"payloads",level:2},{value:"Profiling",id:"profiling",level:2}],p={toc:l},c="wrapper";function d(e){let{components:n,...a}=e;return(0,r.yg)(c,(0,t.A)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"logging"},"Logging"),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Note: These docs were adopted from the original\n",(0,r.yg)("a",{parentName:"em",href:"https://motioncanvas.io/docs/"},"Motion Canvas")," docs")),(0,r.yg)("p",null,"One method of debugging your code or animation flow is using logging messages.\nFor this, revideo has its own built-in way to log messages."),(0,r.yg)("p",null,"To get a reference to the Logger in revideo you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"useLogger"),"\nfunction:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"import {makeScene2D} from '@revideo/2d';\nimport {useLogger} from '@revideo/core';\n\nexport default makeScene2D(function* (view) {\n  const logger = useLogger();\n  // ...\n});\n")),(0,r.yg)("h2",{id:"basic"},"Basic"),(0,r.yg)("p",null,"Now that we know how to get a reference to the ",(0,r.yg)("inlineCode",{parentName:"p"},"Logger")," we can take a look at\ndifferent ways to log messages. On way is to use standard logging functions like\n",(0,r.yg)("inlineCode",{parentName:"p"},"debug"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"info"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"warn")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"error")," and simply log a string:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"logger.debug('Just here to debug some code.');\nlogger.info('All fine just a little info.');\nlogger.warn('Be careful something has gone wrong.');\nlogger.error('Ups. An error occured.');\n")),(0,r.yg)("p",null,"These messages get then displayed in the UI under the ",(0,r.yg)("inlineCode",{parentName:"p"},"Console")," tab on the left\nside."),(0,r.yg)("h2",{id:"payloads"},"Payloads"),(0,r.yg)("p",null,"In some cases you might want to have a bit more detail in your log messages like\na ",(0,r.yg)("inlineCode",{parentName:"p"},"stacktrace")," or an ",(0,r.yg)("inlineCode",{parentName:"p"},"object"),". You can use payloads to provide more information\nto your log messages."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"logger.debug({\n  message: 'Some more advanced logging',\n  remarks: 'Some remarks about this log. Can also contain <b>HTML</b> tags.',\n  object: {\n    someProperty: 'some property value',\n  },\n  durationMs: 200,\n  stack: new Error('').stack,\n});\n")),(0,r.yg)("p",null,"This creates a collapsed log message in the UI which can be expanded to view all\nthe details provided."),(0,r.yg)("p",null,(0,r.yg)("img",{src:o(4350).A,width:"687",height:"571"})),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"If you quickly want to debug something you can also ",(0,r.yg)("inlineCode",{parentName:"p"},"debug()"),". That way you\ndon't have to ",(0,r.yg)("inlineCode",{parentName:"p"},"useLogger")," manually and create a payload.")),(0,r.yg)("h2",{id:"profiling"},"Profiling"),(0,r.yg)("p",null,"Besides logging messages its also possible to profile certain sections of code\nwith the ",(0,r.yg)("inlineCode",{parentName:"p"},"Logger"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"logger.profile('id'); // <-- starts the profiling\n// some expensive calculation\nlogger.profile('id'); // <-- ends the profiling\n")))}d.isMDXComponent=!0},4350:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/logpayload-message-7fb33242e887ad1cc04f6d894cbed8a8.png"}}]);