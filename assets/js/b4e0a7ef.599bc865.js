"use strict";(self.webpackChunk_revideo_docs=self.webpackChunk_revideo_docs||[]).push([[2551],{2247:(e,n,o)=>{o.d(n,{xA:()=>d,yg:()=>c});var r=o(4041);function t(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function i(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?i(Object(o),!0).forEach((function(n){t(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function l(e,n){if(null==e)return{};var o,r,t=function(e,n){if(null==e)return{};var o,r,t={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],n.indexOf(o)>=0||(t[o]=e[o]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var p=r.createContext({}),s=function(e){var n=r.useContext(p),o=n;return e&&(o="function"==typeof e?e(n):a(a({},n),e)),o},d=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var o=e.components,t=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),g=s(o),f=t,c=g["".concat(p,".").concat(f)]||g[f]||u[f]||i;return o?r.createElement(c,a(a({ref:n},d),{},{components:o})):r.createElement(c,a({ref:n},d))}));function c(e,n){var o=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=o.length,a=new Array(i);a[0]=f;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[g]="string"==typeof e?e:t,a[1]=l;for(var s=2;s<i;s++)a[s]=o[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}f.displayName="MDXCreateElement"},3377:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=o(9575),t=(o(4041),o(2247));const i={sidebar_position:1,slug:"/renderer/renderVideo"},a="renderVideo()",l={unversionedId:"api-reference/renderVideo",id:"api-reference/renderVideo",title:"renderVideo()",description:"The renderVideo function lets you render (parameterized) videos in a nodejs",source:"@site/docs/api-reference/renderVideo.mdx",sourceDirName:"api-reference",slug:"/renderer/renderVideo",permalink:"/renderer/renderVideo",draft:!1,editUrl:"https://github.com/havenhq/revideo/blob/main/packages/docs/docs/api-reference/renderVideo.mdx",tags:[],version:"current",lastUpdatedBy:"Justus Mattern",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/renderer/renderVideo"},sidebar:"docs",previous:{title:"API Reference",permalink:"/category/api-reference"}},p={},s=[{value:"Example Usage",id:"example-usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"configFile:",id:"configfile",level:3},{value:"params (optional):",id:"params-optional",level:3},{value:"progressCallback (optional):",id:"progresscallback-optional",level:3},{value:"settings (optional):",id:"settings-optional",level:3},{value:"name (optional):",id:"name-optional",level:4},{value:"workers (optional):",id:"workers-optional",level:4},{value:"range (optional):",id:"range-optional",level:4},{value:"dimensions (optional):",id:"dimensions-optional",level:4},{value:"logProgress (optional):",id:"logprogress-optional",level:4},{value:"ffmpeg (optional):",id:"ffmpeg-optional",level:4},{value:"ffmpegLogLevel (optional):",id:"ffmpegloglevel-optional",level:5},{value:"ffmpegPath (optional):",id:"ffmpegpath-optional",level:5},{value:"puppeteer (optional):",id:"puppeteer-optional",level:4}],d={toc:s},g="wrapper";function u(e){let{components:n,...o}=e;return(0,t.yg)(g,(0,r.A)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"rendervideo"},"renderVideo()"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"renderVideo")," function lets you render (parameterized) videos in a nodejs\nprocess. It uses a headless browser to achieve this."),(0,t.yg)("h2",{id:"example-usage"},"Example Usage"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-tsx"},"import {renderVideo} from '@revideo/renderer';\n\nfunction logProgressToConsole(id: number, progress: number) {\n  console.log(`[${id}] Progress: ${(progress * 100).toFixed(1)}%`);\n}\n\nrenderVideo('./vite.config.ts', {color: 'white'}, printProgress, {\n  name: 'out',\n  workers: 1,\n  range: [1, 3],\n  dimensions: [1080, 1792],\n  logProgress: true,\n  fmpeg: {\n    ffmpegLogLevel: 'error',\n    ffmpegPath: 'ffmpeg',\n  },\n  puppeteer: {\n    args: ['--no-sandbox'],\n  },\n});\n")),(0,t.yg)("h2",{id:"arguments"},"Arguments"),(0,t.yg)("h3",{id:"configfile"},"configFile:"),(0,t.yg)("p",null,"A string pointing towards your Vite config file. This will almost always be\n",(0,t.yg)("inlineCode",{parentName:"p"},"vite.config.ts"),"."),(0,t.yg)("h3",{id:"params-optional"},"params (optional):"),(0,t.yg)("p",null,"Parameters / or variables passed to your video. See ",(0,t.yg)("a",{parentName:"p",href:"/parameterized-video"},"here"),"\nlearn more about parameterized videos. ",(0,t.yg)("inlineCode",{parentName:"p"},"default = {}")),(0,t.yg)("h3",{id:"progresscallback-optional"},"progressCallback (optional):"),(0,t.yg)("p",null,"A function that gets called with the progress of the rendering process. The\nfunction gets called with two arguments: the id of the worker that is calling\nthe function, and the progress of the rendering process (float between 0 and 1).\n",(0,t.yg)("inlineCode",{parentName:"p"},"default = () => {}")),(0,t.yg)("h3",{id:"settings-optional"},"settings (optional):"),(0,t.yg)("p",null,"An object with the following arguments:"),(0,t.yg)("h4",{id:"name-optional"},"name (optional):"),(0,t.yg)("p",null,"The file name of the video output - the video will be saved to ",(0,t.yg)("inlineCode",{parentName:"p"},"{name}.mp4"),".\n",(0,t.yg)("inlineCode",{parentName:"p"},'default = "project"')),(0,t.yg)("h4",{id:"workers-optional"},"workers (optional):"),(0,t.yg)("p",null,"The number of processes you want to use to parallelize rendering - for example,\nrendering a 100s long video with 10 workers means that 10 processes handle 10s\nof video each. Your laptop will probably render fastest with one worker, but VMs\nwith a lot of computing power can benefit from using more than one - ideally,\nyou should experiment what number gives you the best speedup. ",(0,t.yg)("inlineCode",{parentName:"p"},"default = 1"),"."),(0,t.yg)("h4",{id:"range-optional"},"range (optional):"),(0,t.yg)("p",null,"The start and end second of the video. Can be used to only render a part of the\nvideo. ",(0,t.yg)("inlineCode",{parentName:"p"},"default = [0, Infinity]")),(0,t.yg)("h4",{id:"dimensions-optional"},"dimensions (optional):"),(0,t.yg)("p",null,"Dimensions of the video to render as ","[x,y]",". Default: uses the value specified in\nproject.meta."),(0,t.yg)("h4",{id:"logprogress-optional"},"logProgress (optional):"),(0,t.yg)("p",null,"Logs render progress to the console if set to ",(0,t.yg)("inlineCode",{parentName:"p"},"true")),(0,t.yg)("h4",{id:"ffmpeg-optional"},"ffmpeg (optional):"),(0,t.yg)("p",null,"FFmpeg options - is an instance of FFmpegOptions."),(0,t.yg)("h5",{id:"ffmpegloglevel-optional"},"ffmpegLogLevel (optional):"),(0,t.yg)("p",null,"The log level of FFmpeg. Can be one of ",(0,t.yg)("inlineCode",{parentName:"p"},"error"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"warning"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"info"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"verbose"),",\n",(0,t.yg)("inlineCode",{parentName:"p"},"debug"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"trace"),". ",(0,t.yg)("inlineCode",{parentName:"p"},'default = "error"')),(0,t.yg)("h5",{id:"ffmpegpath-optional"},"ffmpegPath (optional):"),(0,t.yg)("p",null,"The path to the FFmpeg binary. If not specified, the FFmpeg binary shipped with\nRevideo will be used."),(0,t.yg)("h4",{id:"puppeteer-optional"},"puppeteer (optional):"),(0,t.yg)("p",null,"Launch options for puppeteer - is an instance of puppeteer's\n",(0,t.yg)("a",{parentName:"p",href:"https://pptr.dev/api/puppeteer.browserlaunchargumentoptions/"},"BrowserLaunchArgumentOptions")))}u.isMDXComponent=!0}}]);