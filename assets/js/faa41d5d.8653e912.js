"use strict";(self.webpackChunk_revideo_docs=self.webpackChunk_revideo_docs||[]).push([[4195],{2247:(e,n,r)=>{r.d(n,{xA:()=>p,yg:()=>m});var t=r(4041);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=t.createContext({}),d=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},p=function(e){var n=d(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(r),g=o,m=u["".concat(s,".").concat(g)]||u[g]||c[g]||i;return r?t.createElement(m,a(a({ref:n},p),{},{components:r})):t.createElement(m,a({ref:n},p))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var d=2;d<i;d++)a[d]=r[d];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},8338:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var t=r(9575),o=(r(4041),r(2247));const i={sidebar_position:2,slug:"/common-issues/slow-rendering"},a="Slow Rendering",l={unversionedId:"common-issues/slow-rendering",id:"common-issues/slow-rendering",title:"Slow Rendering",description:"The rendering speed of Revideo projects depends on the content of your video.",source:"@site/docs/common-issues/slow-rendering.mdx",sourceDirName:"common-issues",slug:"/common-issues/slow-rendering",permalink:"/common-issues/slow-rendering",draft:!1,editUrl:"https://github.com/havenhq/revideo/blob/main/packages/docs/docs/common-issues/slow-rendering.mdx",tags:[],version:"current",lastUpdatedBy:"Justus Mattern",sidebarPosition:2,frontMatter:{sidebar_position:2,slug:"/common-issues/slow-rendering"},sidebar:"docs",previous:{title:"FFmpeg Issues",permalink:"/common-issues/ffmpeg"},next:{title:"Upgrading",permalink:"/category/upgrading"}},s={},d=[{value:"Upgrade to &gt;=v0.4.4",id:"upgrade-to-v044",level:3},{value:"Use MP4 decoder",id:"use-mp4-decoder",level:3},{value:"Lower output resolution through <code>resolutionScale</code> in <code>project.meta</code>.",id:"lower-output-resolution-through-resolutionscale-in-projectmeta",level:3},{value:"Use smaller assets",id:"use-smaller-assets",level:3},{value:"Parallelize Rendering",id:"parallelize-rendering",level:3}],p={toc:d},u="wrapper";function c(e){let{components:n,...r}=e;return(0,o.yg)(u,(0,t.A)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"slow-rendering"},"Slow Rendering"),(0,o.yg)("p",null,"The rendering speed of Revideo projects depends on the content of your video.\nProjects that contain no ",(0,o.yg)("inlineCode",{parentName:"p"},"<Video/>")," elements generally render much faster than\nthose that do, as processing videos is an expensive operation."),(0,o.yg)("p",null,"Here you can find some strategies that can help speed up rendering:"),(0,o.yg)("h3",{id:"upgrade-to-v044"},"Upgrade to >=v0.4.4"),(0,o.yg)("p",null,"We regularly release new versions of Revideo that often come with performance\nimprovements. To get the best rendering speeds possible, make sure to upgrade\nRevideo to >=v0.4.4."),(0,o.yg)("h3",{id:"use-mp4-decoder"},"Use MP4 decoder"),(0,o.yg)("p",null,"We use the Webcodecs API to extract frames from ",(0,o.yg)("inlineCode",{parentName:"p"},"<Video/>")," elements during\nrendering. This, however, is currently only supported for mp4 files, and Revideo\nwill use Ffmpeg-based decoder or naively seek set the ",(0,o.yg)("inlineCode",{parentName:"p"},".currentTime")," attribute\non the HTMLVideoElement if it detects another file type. If Revideo fails to\ndetect a file type, you will receive the following warning:"),(0,o.yg)("p",null,(0,o.yg)("em",{parentName:"p"},"WARNING: Could not detect file type of video, will default to using mp4\ndecoder. If your video file is no mp4 file, this will lead to an error - to fix\nthis, reencode your video as an mp4 file (better performance) or specify a\ndifferent decoder.")),(0,o.yg)("p",null,"If this occurs, you can set the decoder explicitly as a prop of your ",(0,o.yg)("inlineCode",{parentName:"p"},"<Video/>"),"\ntag:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx"},"yield view.add(<Video src={'your_file'} decoder={'web'} />);\n")),(0,o.yg)("p",null,"You should use the following decoder for different file types:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},'decoder={"web"}')," for mp4"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},'decoder={"ffmpeg"}')," for .webm"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},'decoder={"slow"}')," for everything else")),(0,o.yg)("h3",{id:"lower-output-resolution-through-resolutionscale-in-projectmeta"},"Lower output resolution through ",(0,o.yg)("inlineCode",{parentName:"h3"},"resolutionScale")," in ",(0,o.yg)("inlineCode",{parentName:"h3"},"project.meta"),"."),(0,o.yg)("p",null,"You can scale down the quality of your render output by setting the\n",(0,o.yg)("inlineCode",{parentName:"p"},"resolutionScale")," parameter in the ",(0,o.yg)("inlineCode",{parentName:"p"},"rendering")," section of ",(0,o.yg)("inlineCode",{parentName:"p"},"project.meta"),". We\nhave noticed that setting the scale to 0.5 made our renders twice as fast as\nwith the default of 1.0."),(0,o.yg)("h3",{id:"use-smaller-assets"},"Use smaller assets"),(0,o.yg)("p",null,"When using media such as ",(0,o.yg)("inlineCode",{parentName:"p"},"<Img/>")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"<Video/>")," elements, processing large files\ntakes Revideo longer than smaller ones. If you want to render a video with a\nresolution of 1920x1080, it would be overkill to insert a 4K video inside a\n",(0,o.yg)("inlineCode",{parentName:"p"},"<Video/>")," tag, as the resolution will be scaled down anyway. In this case, you\ncan speed up renders by using a smaller file."),(0,o.yg)("h3",{id:"parallelize-rendering"},"Parallelize Rendering"),(0,o.yg)("p",null,"You can parallelize your rendering workloads using the ",(0,o.yg)("inlineCode",{parentName:"p"},"workers"),": argument in\n",(0,o.yg)("inlineCode",{parentName:"p"},"renderVideo()")," (",(0,o.yg)("a",{parentName:"p",href:"https://docs.re.video/api/renderer/renderVideo/"},"docs"),"). Note\nthat this can get memory-intensive, as it spins up multiple ffmpeg workers in\nparallel - you might have to switch to more powerful hardware to support a lot\nof workers."),(0,o.yg)("p",null,"Alternatively, you can also parallelize render workloads using\n",(0,o.yg)("inlineCode",{parentName:"p"},"renderPartialVideo()"),"\n(",(0,o.yg)("a",{parentName:"p",href:"https://docs.re.video/renderer/renderPartialVideo/"},"docs"),") and serverless\nfunction services such as Google Cloud Run or AWS Lambda. We have released an\n",(0,o.yg)("a",{parentName:"p",href:"https://github.com/redotvideo/examples/tree/main/google-cloud-run-parallelized"},"example project"),"\ndemostrating how you can set up parallel rendering with Google Cloud Functions,\nand will release a guide for AWS Lambda soon."),(0,o.yg)("p",null,"We will soon release a managed platform that enables fast, parallelized\nrendering. If you are interested in getting access, feel free to register\ninterest ",(0,o.yg)("a",{parentName:"p",href:"https://tally.so/r/mOz4GK"},"here"),"."))}c.isMDXComponent=!0}}]);